Front-end is pretty much done

Left to be implemented -
  - Google Calendar Api integration (Probably most logical next step)
    - Google Api 


  - Make postgresql database while using docker with appropriate columns/table (Time to remind)
    - When form is submitted Correctly add to database, probably Python (Django probably)
  - Script so that when a form is submitted jacob gets email
  - Script so that when a form is submitted client gets email and text (confirmation)
  - Script so that client gets a reminder 1 hour prior ?


  **** Remember to change cors from true to a specific port - settings.py file

  - Hosting on Azure serverless

Tasks - 

  - Beautify the scroll feature, when clicking left and right to view client transformations make the button nicer and 
    make an animation (EST 45min)

  - Try and integrate Google Maps Api rather than the iframe we currently have (Optional-Maybe not best idea)
    if decide not to, make it so the iframe looks better on mobile. (EST {api route - 1hr or more} {beautify route - 20min })
  
  - For people who do send automated text message script that runs when they submit the form and it gets posted to Django.
    Workflow would be form submit -> views.py and then add method for this, google this (EST 1hr)
  
  - Same thing but email to jacob (EST 30min)
